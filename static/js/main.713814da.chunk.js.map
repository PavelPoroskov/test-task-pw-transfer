{"version":3,"sources":["config.ts","8-remote/client/fetch-methods.ts","8-remote/client/index.ts","4-store/modules/history.ts","4-store/modules/userinfo.ts","4-store/modules/auth.ts","4-store/modules/transaction.ts","4-store/modules/recipients.ts","4-store/index.ts","6-dsystem/TextInput/idgen.js","6-dsystem/TextInput/constants.js","6-dsystem/TextInput/TextInput.js","6-dsystem/TextInput/index.tsx","5-components/RegisterForm/index.tsx","6-dsystem/LinkButton/index.tsx","1-screens/RegisterScreen/index.tsx","5-components/LoginForm/index.tsx","1-screens/LoginScreen/index.tsx","5-components/AuthHeader/index.tsx","1-screens/MainScreen/AuthHeaderConnected.ts","5-components/UserInfoHeader/index.tsx","1-screens/MainScreen/UserInfoHeaderConnected.ts","6-dsystem/Autocomplete/constants.js","6-dsystem/Autocomplete/idgen.js","6-dsystem/Autocomplete/Autocomplete.js","6-dsystem/Autocomplete/index.tsx","5-components/TransactionForm/index.tsx","1-screens/MainScreen/TransactionFormConnected.ts","4-store/selectors.ts","9-helpers/index.ts","5-components/History/index.tsx","1-screens/MainScreen/HistoryConnected.ts","1-screens/MainScreen/index.tsx","1-screens/SwitchScreen/index.tsx","5-components/RootLayout/index.tsx","0-App/index.tsx","index.tsx"],"names":["BASE_URL","fetchBase","method","apipoint","token","input","_options","options","headers","Headers","append","concat","JSON","stringify","fetch","then","result","ok","json","text","Error","get","post","client","undefined","register","id_token","login","logout","Promise","resolve","getLoggedUserInfo","user_info_token","getLoggedUserTransactions","trans_token","getRecipients","filter","createTransaction","makeClient","GET","GET_SUCCESS","GET_FAILURE","CLEAR","initState","list","id","name","email","balance","requestUserInfo","type","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","CHOICE_USE_LOGIN_FORM","logged","useLoginForm","errorMessage","choiceUseLoginForm","payload","NEW","COPY","COMMIT","COMMIT_SUCCESS","COMMIT_FAILURE","CANCEL","CHOICE_HISTORY","showHistory","editing","amount","rootReducer","combineReducers","auth","state","arguments","length","action","Object","objectSpread","userinfo","transaction","history","recipients","reduce","acc","item","rootEpic","combineEpics","action$","state$","_ref","pipe","ofType","switchMap","_ref2","from","mergeMap","response","of","catchError","error","message","requestRegisterFailure","_ref3","_ref4","requestLoginFailure","map","requestCommitFailure","requestRecipientsFailure","epicMiddleware","createEpicMiddleware","dependencies","configureStore","store","createStore","applyMiddleware","run","idgen","oldId","constants","STYLES","WAVES","SIZES","PLACEMENTS","SCALES","ICON_SIZES","TextInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","password","M","window","CharacterCounter","init","inputRef","updateTextFields","prevProps","value","responsiveClasses","_this2","_this$props","children","s","m","l","xl","disabled","noLayout","placeholder","icon","label","inputClassName","success","validate","defaultValue","other","objectWithoutProperties","sizes","col","forEach","size","computedType","wrapperClasses","cx","inputProps","react_default","a","createElement","className","React","cloneElement","renderIcon","assign","ref","el","active","label-icon","data-success","data-error","htmlFor","Component","errors","touched","values","restProps","_6_dsystem_TextInput_TextInput","withFormik","mapPropsToValues","username","passwordForConfirm","handleSubmit","formikBag","restValues","submit","testValue","schema","validateSync","err","yup_string","trim","required","displayName","handleChange","handleBlur","bundle","onChange","onBlur","formik_esm","react_materialize_lib","_6_dsystem_TextInput","waves","styleNew","lineHeight","LinkButton","onClick","dataname","dataamount","extraProps","style","stylesRoot","display","flexDirection","alignItems","stylesFormContainer","marginTop","connect","dispatch","requestRegister","switchForm","RegisterForm","_6_dsystem_LinkButton","validationSchema","yup_object","shape","autoComplete","justifyContent","requestLogin","LoginForm","container","padding","backgroundColor","left","flex","fontSize","fontWeight","AuthHeader","styles","UserInfoHeader","Autocomplete_constants","Autocomplete","itemSelected","prevData","data","_onChange","bind","assertThisInitialized","_onAutocomplete","instance","onAutocomplete","prevState","updateData","open","destroy","e","target","setState","defaultProps","limit","Infinity","minLength","sortFunction","_6_dsystem_Autocomplete_Autocomplete","yup_number","moreThan","max","cancel","onChangeFilter","_6_dsystem_Autocomplete","min","requestCommit","requestRecipients","TransactioForm","sortedHistory","createSelector","slice","sort","key","direction","o1","o2","sortBy","stylesContainer","History","copyTransaction","ds","dataset","date","Math","containerTransaction","styleMenu","paddingLeft","paddingRight","editingTransaction","beginTransaction","choiceHistory","AuthHeaderConnected","UserInfoHeaderConnected","TransactionFormConnected","HistoryConnected","Fragment","_1_screens_LoginScreen","_1_screens_RegisterScreen","MainScreen","marginBottom","RootLayout","offset","App","es","_5_components_RootLayout","_1_screens_SwitchScreen","ReactDOM","render","_0_App","document","getElementById"],"mappings":"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","file":"static/js/main.713814da.chunk.js","sourcesContent":["export const BASE_URL = 'http://193.124.114.46:3001';","import { BASE_URL } from 'config';\n\nfunction fetchBase( method: string, apipoint: string, token?: string, input?: any, _options?: any) {\n\n  let options: any = _options || {};\n  options['method'] = method;\n\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  if (token) {\n    headers.append('Authorization', `Bearer ${token}`)\n  }\n  options['headers'] = headers;\n\n  if (input) {\n    options['body'] = JSON.stringify(input);\n  }\n\n  return fetch(`${BASE_URL}${apipoint}`, options).then(result => {\n    if (result.ok) {\n      return result.json()\n    }\n    return result.text()\n  }).then(result => {\n    if (typeof result == \"string\") {\n      throw new Error(result)\n    }\n    return result\n  })\n}\n\nexport const get = (apipoint: string, token?: string, input?: any) => fetchBase('GET', apipoint, token, input ) \nexport const post = (apipoint: string, token?: string, input?: any, options?: any ) => fetchBase('POST', apipoint, token, input, options ) \n\n","import { get, post } from './fetch-methods'\n\nexport interface RegisterUserInput {\n  username: string,\n  email: string,\n  password: string,\n}\nexport interface LoginInput {\n  email: string,\n  password: string,\n}\ninterface LoginResult {\n  id_token: string,\n}\nexport interface UserInfo {\n  id: number,\n  name: string,\n  email: string,\n  balance: number,\n};\ninterface UserInfoResult {\n  user_info_token: UserInfo\n};\n\nexport interface Transaction {\n  id: number,\n  date: string,\n  username: string,\n  amount: number,\n  balance: number,\n};\ninterface TransactionsResult {\n  trans_token: Transaction[]\n};\nexport interface CreateTransactionInput {\n  name: string,\n  amount: number,\n}\ninterface CreateTransactionResult {\n  trans_token: Transaction\n}\nexport interface Recipient {\n  id: number,\n  name: string\n}\nexport interface ClientInteface {\n  register: (input: RegisterUserInput) => Promise<void>,\n  login: (input: LoginInput) => Promise<void>,\n  logout: () => Promise<void>,\n\n  getLoggedUserInfo: () => Promise<UserInfo>,\n  getLoggedUserTransactions: () => Promise<Transaction[]>,\n  getRecipients: (filter: string, options?: any) => Promise<Recipient[]>,\n\n  createTransaction: (input: CreateTransactionInput) => Promise<void>,\n}\n\nfunction makeClient() {\n  let token: string | undefined = undefined;\n\n  return {\n    register: function(input: RegisterUserInput) {\n      return post('/users', undefined, input)\n        .then((result: LoginResult) => {\n          token = result.id_token\n        }); \n    },\n    login: function(input: LoginInput) {\n      return post('/sessions/create', undefined, input)\n        .then((result: LoginResult) => {\n          token = result.id_token\n        }); \n    },\n    logout: function() {\n      token = undefined;\n      return Promise.resolve();\n    },\n\n    getLoggedUserInfo: function() {\n      return get('/api/protected/user-info', token ).then((result: UserInfoResult) => result.user_info_token)\n    },\n    getLoggedUserTransactions: function() {\n      return get('/api/protected/transactions', token ).then((result: TransactionsResult) => result.trans_token)\n    },\n    getRecipients: function(filter: string, options?: any) {\n      return post('/api/protected/users/list', token, {filter}, options )\n    },\n\n    createTransaction: function(input: CreateTransactionInput) {\n      return post('/api/protected/transactions', token, input )\n    },\n  }\n}\n\nconst client: ClientInteface = makeClient()\n\nexport default client\n","import { AnyAction } from 'redux';\nimport { ofType } from \"redux-observable\"\nimport { switchMap, map, catchError } from \"rxjs/operators\";\nimport { of, from  } from \"rxjs\";\n\nimport {Transaction} from '8-remote/client';\nimport { AppEpic } from \"../types\"\n\nconst GET   = 'pw-transfer/history/GET';\nconst GET_SUCCESS = 'pw-transfer/history/GET_SUCCESS';\nconst GET_FAILURE = 'pw-transfer/history/GET_FAILURE';\nconst CLEAR = 'pw-transfer/history/CLEAR';\n\nexport interface HistoryState {\n  list: Transaction[];\n  filter: {\n    user?: string;\n  }\n}\nconst initState: HistoryState = {\n  list: [],\n  filter: {}\n}\n// Reducer\nexport default function reducer(state: HistoryState = initState, action: AnyAction ): HistoryState {\n  switch (action.type) {\n    case GET:\n      return state\n    case GET_SUCCESS:\n      return {\n        ...state,\n        list: action.payload\n      }\n    case GET_FAILURE:\n      return state\n    case CLEAR:\n      return initState\n    default: \n      return state;\n  }\n}\n\n// Action Creators\nexport const requestHistory = () => ({ type: GET });\nconst requestHistorySuccess = (payload: Transaction[]) => ({ type: GET_SUCCESS, payload });\nconst requestHistoryFailure = (payload: any) => ({ type: GET_FAILURE, payload });\nexport const clearHistory = () => ({ type: CLEAR });\n\nexport const historyEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n  ofType(GET),\n  switchMap(({payload}) =>\n    from(client.getLoggedUserTransactions()).pipe(\n      map(response => requestHistorySuccess(response)),\n      catchError(error => of(requestHistoryFailure(error)))\n    )\n  )\n);\n","import { AnyAction } from 'redux';\nimport { switchMap, mergeMap, catchError } from \"rxjs/operators\";\nimport { of, from  } from \"rxjs\";\nimport { ofType } from \"redux-observable\"\n\nimport {UserInfo} from '8-remote/client';\nimport {requestHistory,clearHistory} from './history'\nimport { AppEpic } from \"../types\"\n\nconst GET   = 'pw-transfer/userinfor/GET';\nconst GET_SUCCESS = 'pw-transfer/userinfor/GET_SUCCESS';\nconst GET_FAILURE = 'pw-transfer/userinfor/GET_FAILURE';\nconst CLEAR = 'pw-transfer/userinfor/CLEAR';\n\nexport type UserInfoState = UserInfo;\nconst initState: UserInfoState = {\n  id: -1,\n  name: '',\n  email: '',\n  balance: -1,\n}\n// Reducer\nexport default function reducer(state: UserInfoState = initState, action: AnyAction ): UserInfoState {\n  switch (action.type) {\n    case GET:\n      return state\n    case GET_SUCCESS:\n      return action.payload\n    case GET_FAILURE:\n      return state\n    case CLEAR:\n      return initState\n    default: \n      return state;\n  }\n}\n\n// Action Creators\nexport const requestUserInfo = () => ({ type: GET });\nconst requestUserInfoSuccess = (payload: UserInfo) => ({ type: GET_SUCCESS, payload });\nconst requestUserInfoFailure = (payload: any) => ({ type: GET_FAILURE, payload });\nexport const clearUserInfo = () => ({ type: CLEAR });\n\nexport const userInfoClearEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n  ofType(CLEAR),\n  mergeMap(response => of(\n    clearUserInfo(), \n    clearHistory()\n  )),\n);\nexport const userInfoEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n  ofType(GET),\n  switchMap(({payload}) =>\n    from(client.getLoggedUserInfo()).pipe(\n      // map(response => requestUserInfoSuccess(response)),\n      mergeMap(response => of(\n        requestUserInfoSuccess(response), \n        requestHistory()\n      )),\n      catchError(error => of(requestUserInfoFailure(error)))\n    )\n  )\n);\n","import { AnyAction } from 'redux';\nimport { ofType } from \"redux-observable\"\nimport { switchMap, mergeMap, catchError } from \"rxjs/operators\";\nimport { of, from  } from \"rxjs\";\n\nimport { RegisterUserInput, LoginInput } from '8-remote/client/index'\nimport { requestUserInfo } from './userinfo'\nimport { AppEpic } from \"../types\"\n\nconst REGISTER = 'pw-transfer/auth/REGISTER';\nconst REGISTER_SUCCESS = 'pw-transfer/auth/REGISTER_SUCCESS';\nconst REGISTER_FAILURE = 'pw-transfer/auth/REGISTER_FAILURE';\nconst LOGIN = 'pw-transfer/auth/LOGIN';\nconst LOGIN_SUCCESS = 'pw-transfer/auth/LOGIN_SUCCESS';\nconst LOGIN_FAILURE = 'pw-transfer/auth/LOGIN_FAILURE';\nconst LOGOUT = 'pw-transfer/auth/LOGOUT';\nconst CHOICE_USE_LOGIN_FORM = 'pw-transfer/auth/CHOICE_USE_LOGIN_FORM';\n\nexport interface AuthState {\n  logged: boolean;\n  useLoginForm: boolean;\n  errorMessage: string | null;\n};\n\nconst initState: AuthState = {\n  logged: false,\n  useLoginForm: true,\n  errorMessage: null,\n}\n\nexport default function reducer(state: AuthState = initState, action: AnyAction): AuthState {\n  switch (action.type) {\n    case CHOICE_USE_LOGIN_FORM:\n      return {\n        ...initState,\n        useLoginForm: action.payload,\n        errorMessage: null,\n      }\n    case REGISTER:\n    case LOGIN:\n      return {\n        ...state,\n        logged: false,\n        errorMessage: null,\n      }\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        logged: true,\n      }\n    case REGISTER_FAILURE:\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        logged: false,\n        errorMessage: action.payload\n      }\n    case LOGOUT:\n      return initState\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport const choiceUseLoginForm = (payload: boolean) => ({ type: CHOICE_USE_LOGIN_FORM, payload });\n\nexport const requestRegister = (input: RegisterUserInput) => ({ type: REGISTER, payload: input });\nconst requestRegisterSuccess = () => ({ type: REGISTER_SUCCESS });\nconst requestRegisterFailure = (error: any) => ({ type: REGISTER_FAILURE, payload: error.message });\n\nexport const requestLogin = (input: LoginInput) => ({ type: LOGIN, payload: input });\nconst requestLoginSuccess = () => ({ type: LOGIN_SUCCESS });\nconst requestLoginFailure = (error: any) => ({ type: LOGIN_FAILURE, payload: error.message })\n\nexport const requestLogout = () => ({ type: LOGOUT });\n\n// Side Effects\nexport const registerEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n  ofType(REGISTER),\n  switchMap(({payload}) =>\n    from(client.register(payload)).pipe(\n      mergeMap(response => of(\n        requestRegisterSuccess(), \n        requestUserInfo()\n      )),\n      catchError(error => of(requestRegisterFailure(error)))\n    )\n  )\n);\n\nexport const loginEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n  ofType(LOGIN),\n  switchMap(({payload}) =>\n    from(client.login(payload)).pipe(\n      mergeMap(response => of(\n        requestLoginSuccess(),\n        requestUserInfo()\n      )),\n      catchError(error => of(requestLoginFailure(error)))\n    )\n  )\n);\n\n// export const logoutEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n//   ofType(LOGOUT),\n//   map((response) => of(clearUserInfo())),\n// );\n","import { AnyAction } from 'redux';\nimport { ofType } from \"redux-observable\"\nimport { switchMap, mergeMap, catchError } from \"rxjs/operators\";\nimport { of, from  } from \"rxjs\";\n\nimport {CreateTransactionInput} from '8-remote/client';\nimport { requestUserInfo} from './userinfo'\nimport { AppEpic } from \"../types\"\n\nconst NEW = 'pw-transfer/transaction/NEW';\nconst COPY = 'pw-transfer/transaction/COPY';\nconst COMMIT   = 'pw-transfer/transaction/COMMIT';\nconst COMMIT_SUCCESS = 'pw-transfer/transaction/COMMIT_SUCCESS';\nconst COMMIT_FAILURE = 'pw-transfer/transaction/COMMIT_FAILURE';\nconst CANCEL = 'pw-transfer/transaction/CANCEL';\n\nconst CHOICE_HISTORY = 'pw-transfer/transaction/CHOICE_HISTORY';\n\nexport interface TransactionState {\n  showHistory: boolean,\n  editing: boolean;\n  //saving: boolean;\n  name: string,\n  amount: number,\n  errorMessage: string | null;\n};\n\nconst initState: TransactionState = {\n  showHistory: false,\n  editing: false,\n  name: '',\n  amount: 0,\n  errorMessage: null,\n}\n// Reducer\nexport default function reducer(state: TransactionState = initState, action: AnyAction ): TransactionState {\n  switch (action.type) {\n    case NEW:\n      return {\n        ...initState,\n        editing: true,\n        showHistory: false,\n      }\n    case COPY:\n      return {\n        errorMessage: null,\n        name: action.payload.name,\n        // initAmount: `${action.payload.amount || ''}`,\n        amount: action.payload.amount,\n        editing: true,\n        showHistory: false,\n      }\n    case CANCEL:\n      return initState\n    // case COMMIT:\n    //   return initState\n    case COMMIT_SUCCESS:\n      return initState\n    case COMMIT_FAILURE:\n      return {\n        ...state,\n        errorMessage: action.payload\n      }\n    case CHOICE_HISTORY:\n      return {\n        ...initState,\n        showHistory: action.payload,\n      }\n    default: \n      return state;\n  }\n}\n\n// Action Creators\nexport const newTransaction = () => ({ type: NEW });\nexport const copyTransaction = (payload?: CreateTransactionInput) => ({ type: COPY, payload });\nexport const cancelTransaction = () => ({ type: CANCEL });\nexport const requestCommit = (input: CreateTransactionInput) => ({ type: COMMIT, payload: input });\nconst requestCommitSuccess = () => ({ type: COMMIT_SUCCESS });\nconst requestCommitFailure = (error: any) => ({ type: COMMIT_FAILURE, payload: error.message });\n\nexport const choiceHistory = (showHistory: boolean) => ({ type: CHOICE_HISTORY, payload: showHistory });\n\n// Side Effects\nexport const commitEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n  ofType(COMMIT),\n  switchMap(({payload}) =>\n    from(client.createTransaction(payload)).pipe(\n      mergeMap(response => of(\n        requestCommitSuccess(),\n        requestUserInfo()\n      )),\n      catchError(error => of(requestCommitFailure(error)))\n    )\n  )\n);\n","import { AnyAction } from 'redux';\nimport { ofType } from \"redux-observable\"\nimport { switchMap, mergeMap, catchError } from \"rxjs/operators\";\nimport { of, from  } from \"rxjs\";\n\nimport { AppEpic } from \"../types\"\n\nconst GET   = 'pw-transfer/recipients/GET';\nconst GET_SUCCESS = 'pw-transfer/recipients/GET_SUCCESS';\nconst GET_FAILURE = 'pw-transfer/recipients/GET_FAILURE';\n\nexport interface RecipientsState {\n  // list: Recipient[];\n  list: {[key: string]: any},\n  filter: string,\n};\n\nconst initState: RecipientsState = {\n  list: {},\n  filter: '',\n}\n// Reducer\nexport default function reducer(state: RecipientsState = initState, action: AnyAction ): RecipientsState {\n  switch (action.type) {\n    case GET:\n      return {\n        ...state,\n        filter: action.payload,\n      }\n    case GET_SUCCESS:\n      return {\n        ...state,\n        list: action.payload.reduce((acc:{[key: string]: any},item:any) => {\n          acc[item.name] = null;\n          return acc;\n        }, {}),\n      }\n    case GET_FAILURE:\n      return state\n    default: \n      return state;\n  }\n}\n\n// Action Creators\nexport const requestRecipients = (filter: string) => ({ type: GET, payload: filter });\nconst requestRecipientsSuccess = (payload: any[]) => ({ type: GET_SUCCESS, payload });\nconst requestRecipientsFailure = (error: any) => ({ type: GET_FAILURE, payload: error.message })\n\n// Side Effects\nexport const recipientsEpic: AppEpic = (action$, state$, {client}) => action$.pipe(\n  ofType(GET),\n  switchMap(({payload}) =>\n    from(client.getRecipients(payload)).pipe(\n      mergeMap(response => of(requestRecipientsSuccess(response))),\n      catchError(error => of(requestRecipientsFailure(error)))\n    )\n  )\n);\n","import client from '8-remote/client/index'\nimport { Action, applyMiddleware, combineReducers, createStore } from \"redux\";\n\nimport { combineEpics, createEpicMiddleware} from 'redux-observable';\n\nimport auth, {registerEpic, loginEpic} from './modules/auth';\nimport userinfo, {userInfoEpic, userInfoClearEpic} from './modules/userinfo';\nimport history, {historyEpic} from './modules/history';\nimport transaction, {commitEpic} from './modules/transaction';\nimport recipients, {recipientsEpic} from './modules/recipients';\n\nimport {RootState, EpicDependencies} from './types'\n\nconst rootReducer = combineReducers<RootState>({\n  auth,\n  userinfo,\n  transaction,\n  history,\n  recipients,\n});\n\nconst rootEpic = combineEpics(\n  registerEpic,\n  loginEpic,\n  // logoutEpic,\n  userInfoEpic,\n  userInfoClearEpic,\n  historyEpic,\n  commitEpic,\n  recipientsEpic\n);\nconst epicMiddleware = createEpicMiddleware<Action,Action,RootState,EpicDependencies>({dependencies: { client } });\n\nfunction configureStore() {\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(epicMiddleware)\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n\nexport default configureStore()","let id = 0;\n\nexport function resetID() {\n  id = 0;\n}\n\nexport default function idgen() {\n  let oldId = id;\n  id += 1;\n  return oldId;\n}\n","export default {\n  STYLES: ['large', 'small', 'floating', 'flat'],\n  WAVES: ['light', 'red', 'yellow', 'orange', 'purple', 'green', 'teal'],\n  SIZES: ['s', 'm', 'l', 'xl'],\n  PLACEMENTS: ['left', 'center', 'right'],\n  SCALES: ['big', 'small'],\n  ICON_SIZES: ['tiny', 'small', 'medium', 'large']\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport idgen from './idgen';\nimport constants from './constants';\n\nclass TextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || idgen();\n\n    if (props.password) {\n      this.id = `password${idgen()}`;\n    }\n\n    if (props.email) {\n      this.id = `email${idgen()}`;\n    }\n  }\n\n  componentDidMount() {\n    if (typeof M !== undefined) {\n      // eslint-disable-next-line react/prop-types\n      this.props['data-length'] && window.M.CharacterCounter.init(this.inputRef);\n      window.M.updateTextFields();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { value } = this.props;\n\n    if (value !== prevProps.value && typeof M !== 'undefined') {\n      window.M.updateTextFields();\n    }\n  }\n\n  render() {\n    const {\n      children,\n      s,\n      m,\n      l,\n      xl,\n      disabled,\n      noLayout,\n      placeholder,\n      icon,\n      label,\n      inputClassName,\n      success,\n      error,\n      password,\n      email,\n      validate,\n      defaultValue,\n      value,\n      type,\n      ...other\n    } = this.props;\n\n    const sizes = { s, m, l, xl };\n\n    let responsiveClasses;\n    if (!noLayout) {\n      responsiveClasses = { col: true };\n      constants.SIZES.forEach(size => {\n        responsiveClasses[size + sizes[size]] = sizes[size];\n      });\n    }\n\n    const wrapperClasses = cx('input-field', responsiveClasses);\n\n    let computedType;\n    if (type) {\n      computedType = type;\n    } else if (password) {\n      computedType = 'password';\n    } else if (email) {\n      computedType = 'email';\n    } else {\n      computedType = 'text';\n    }\n\n    const inputProps = {\n      placeholder,\n      type: computedType,\n      id: this.id,\n      value,\n      defaultValue,\n      disabled,\n      ...other\n    };\n\n    const renderLabel = () =>\n      label && (\n        <label\n          className={cx({\n            active: value || placeholder,\n            'label-icon': typeof label !== 'string'\n          })}\n          data-success={success}\n          data-error={error}\n          htmlFor={inputProps.id}\n        >\n          {label}\n        </label>\n      );\n\n    const renderHelper = () =>\n      (error || success) && (\n        <span\n          className=\"helper-text\"\n          data-error={error}\n          data-success={success}\n        />\n      );\n\n    const renderIcon = () => {\n      if (!icon) return;\n\n      if (typeof icon === 'string') {\n        return <i className=\"material-icons prefix\">{icon}</i>;\n      }\n\n      return React.cloneElement(icon, { className: 'prefix' });\n    };\n\n    return (\n      <div className={wrapperClasses}>\n        {renderIcon()}\n        <input\n          ref={el => {\n            this.inputRef = el;\n          }}\n          className={cx({ validate }, inputClassName)}\n          {...inputProps}\n        />\n        {renderLabel()}\n        {renderHelper()}\n        {children}\n      </div>\n    );\n  }\n}\n\nTextInput.propTypes = {\n  children: PropTypes.node,\n  /*\n   * Strip away all layout classes such as col and sX\n   */\n  noLayout: PropTypes.bool,\n  /*\n   * Responsive size for Mobile Devices\n   */\n  s: PropTypes.number,\n  /*\n   * Responsive size for Tablet Devices\n   */\n  m: PropTypes.number,\n  /*\n   * Responsive size for Desktop Devices\n   */\n  l: PropTypes.number,\n  /**\n   *  Responsive size for Large Desktop Devices\n   */\n  xl: PropTypes.number,\n  /*\n   * disabled input\n   */\n  disabled: PropTypes.bool,\n  /*\n   * Placeholder string\n   */\n  placeholder: PropTypes.string,\n  /*\n   * override id\n   * @default idgen()\n   */\n  id: PropTypes.string,\n  /*\n   * prefix icon, name of the icon or a node\n   */\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /*\n   * label text\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /*\n   * Input initial value\n   */\n  defaultValue: PropTypes.string,\n  /*\n   * Input value\n   */\n  value: PropTypes.string,\n  /*\n   * Add validate class to input\n   */\n  validate: PropTypes.bool,\n  /*\n   * Custom success message\n   */\n  success: PropTypes.string,\n  /*\n   * Custom error message\n   */\n  error: PropTypes.string,\n  /*\n   * Additional classes for input\n   */\n  inputClassName: PropTypes.string,\n  /*\n   * override type=\"text\"\n   */\n  type: PropTypes.string,\n  /*\n   * onChange callback\n   */\n  onChange: PropTypes.func,\n  /*\n   * password type\n   */\n  password: PropTypes.bool,\n  /*\n   * email type\n   */\n  email: PropTypes.bool\n};\n\nexport default TextInput;\n","import React from 'react';\n\nimport MTextInput from \"./TextInput\";\n\nconst TextInput: React.FC<any> = ({errors, touched, values, ...restProps}) => {\n  const name = restProps.name;\n  const error = (errors[name] && touched[name] && errors[name]) || undefined;\n\n  let value = ''\n  if (values && values[name] !== undefined) {\n    value = values[name]\n    if (typeof value == 'number') {\n      value = value === 0 ? '' : `${value}`\n    }\n  }\n\n  return (\n    <MTextInput \n      l={12}\n      s={12}\n      m={12}\n      error={error}\n      // value={value}\n      defaultValue={value}\n      inputClassName={error ? 'invalid' : ''}\n      {...restProps}\n    />\n  );\n}\n\nexport default TextInput;\n","import React from \"react\";\nimport { withFormik, FormikProps, Form } from \"formik\";\nimport { string as yup_string, Schema } from \"yup\";\n\nimport { Row, Col, Button } from \"react-materialize\";\nimport TextInput from '6-dsystem/TextInput'\n\ninterface FormValues {\n  username: string,\n  email: string,\n  password: string,\n  passwordForConfirm: string,\n}\ninterface OtherProps {\n  errorMessage: null | string\n}\n\nconst RegisterFormView = (props: FormikProps<FormValues> & OtherProps) => {\n  const { touched, errors, handleChange, handleBlur, errorMessage } = props;\n  const bundle = { touched, errors, onChange: handleChange, onBlur: handleBlur }\n\n  return (\n    <Form className=\"form\">\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <h4 className=\"center-align\">Register</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <TextInput label=\"Username\" name=\"username\" {...bundle} />\n        </Col>\n      {/* </Row>\n      <Row> */}\n        <Col l={12} m={12} s={12}>\n          <TextInput label=\"Email\" email name=\"email\" {...bundle} />\n        </Col>\n      </Row>\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <TextInput label=\"Password\" password name=\"password\" {...bundle} />\n        </Col>\n      </Row>\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <TextInput label=\"Confirm password\" password name=\"passwordForConfirm\" {...bundle} />\n        </Col>\n      </Row>\n      {errorMessage && (\n        <Row>\n          <Col l={12} m={12} s={12}>\n            <div className=\"center-align form-error\">{errorMessage}</div>\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <Col className=\"right\">\n          <Button type=\"submit\" waves=\"light\" className=\"form-button\">\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n};\ninterface MyFormProps {\n  submit: (values: any) => void;\n  errorMessage: null | string;\n}\nexport default withFormik<MyFormProps, FormValues>({\n  mapPropsToValues: (props) => {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      passwordForConfirm: '',\n    }\n  },\n  handleSubmit: (values, formikBag) => {\n    const { passwordForConfirm, ...restValues } = values;\n    formikBag.props.submit(restValues);\n  },\n  validate: values => {\n    let errors: { [key: string]: string } = {};\n\n    const testValue = (name: string, schema: Schema<any>, value: any, errors: { [key: string]: string }) => {\n      try {\n        schema.validateSync(value);\n      } catch (err) {\n        errors[name] = err.errors[0];\n      };\n    };\n\n    testValue('username', yup_string().trim().required(\"username is required.\"), values.username, errors);\n    testValue('email', yup_string().email().required(\"email is required.\"), values.email, errors);\n    testValue('password', yup_string().required(\"password is required.\"), values.password, errors);\n    testValue('passwordForConfirm', yup_string().required(\"confirm password is required.\"), values.passwordForConfirm, errors);\n    if (values.passwordForConfirm !== values.password) {\n      errors['passwordForConfirm'] = 'must be equel to the password'\n    }\n\n    return errors;\n  },\n  displayName: 'RegisterForm',\n})(RegisterFormView);\n","import React from 'react';\n\ninterface Props {\n  readonly onClick: (e: any) => void;\n  readonly dataname?: string;\n  readonly dataamount?: string;\n}\nconst styleNew: React.CSSProperties = {\n  lineHeight: '160%'\n}\nconst LinkButton: React.FC<Props> = ({onClick,children,dataname,dataamount}) => {\n  const extraProps: {[key: string]: any} = {};\n  if (dataname) {\n    extraProps['data-name'] = dataname;\n  }\n  if (dataamount) {\n    extraProps['data-amount'] = dataamount;\n  }\n  return (\n    <button type=\"button\" className=\"link-button\" onClick={onClick} style={styleNew}\n      {...extraProps}\n    >{children}</button>\n  );\n}\n\nexport default LinkButton;\n","import React from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { requestRegister, choiceUseLoginForm } from '4-store/modules/auth'\nimport { RootState } from '4-store/types'\n\nimport RegisterForm from '5-components/RegisterForm'\nimport LinkButton from '6-dsystem/LinkButton'\n\nconst mapStateToProps = ({ auth }: RootState /*, ownProps*/) => ({\n  errorMessage: auth.errorMessage,\n})\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    submit: (input: any) => dispatch(requestRegister(input)),\n    switchForm: () => dispatch(choiceUseLoginForm(true))\n  }\n}\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nconst stylesRoot: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n}\nconst stylesFormContainer: React.CSSProperties = {\n//   position: 'absolute',\n//   top: '10%',\n    marginTop: '10%',\n    // display: 'flex',\n    // justifyContent: 'center',\n}\nconst RegisterScreen: React.FC<DispatchProps & StateProps> = ({ submit, switchForm, errorMessage }) => {\n  return (\n    <div style={stylesRoot}>\n      <div style={stylesFormContainer}>\n        <RegisterForm submit={submit} errorMessage={errorMessage} />\n      </div>\n      <div>\n        Use <LinkButton onClick={switchForm}>Login Form </LinkButton> if you have an account\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterScreen);\n","import React from \"react\";\nimport { withFormik, FormikProps, Form } from \"formik\";\nimport { string as yup_string, object as yup_object } from \"yup\";\n\nimport { Row, Col, Button } from \"react-materialize\";\nimport TextInput from '6-dsystem/TextInput'\n\ninterface OtherProps {\n  errorMessage: null | string\n}\ninterface FormValues {\n  email: string,\n  password: string,\n}\nconst RegisterFormView = (props: FormikProps<FormValues> & OtherProps) => {\n  const { touched, errors, handleChange, handleBlur, errorMessage } = props;\n  const bundle = {touched, errors, onChange: handleChange, onBlur: handleBlur}\n  return (\n    <Form className=\"form\">\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <h4 className=\"center-align\">Login</h4>\n        </Col>\n      </Row>\n      <Row>\n      <Col l={12} m={12} s={12}>\n        <TextInput label=\"Email\" email name=\"email\" autoComplete=\"off\" {...bundle} />\n        </Col>\n      {/* </Row>\n      <Row> */}\n      <Col l={12} m={12} s={12}>\n        <TextInput label=\"Password\" password name=\"password\" autoComplete=\"off\" {...bundle} />\n        </Col>\n      </Row>\n      {errorMessage && (\n        <Row>\n          <Col l={12} m={12} s={12}>\n            <div className=\"center-align form-error\">{errorMessage}</div>\n          </Col>\n        </Row>\n        )}\n      <Row>\n        <Col className=\"right\">\n          <Button type=\"submit\" waves=\"light\" className=\"form-button\">\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n};\ninterface MyFormProps {\n  submit: (values: any) => void;\n  errorMessage: null | string;\n}\nexport default withFormik<MyFormProps, FormValues>({\n  mapPropsToValues: (props) => {\n    return {\n      email: '',\n      password: '',\n    }\n  },\n  handleSubmit: (values, formikBag) => {\n    formikBag.props.submit(values)\n  },\n  validationSchema: yup_object().shape({\n    email: yup_string().email().required(\"email is required.\"),\n    password: yup_string().required(\"password is required.\"),\n  }),\n  displayName: 'LoginForm',\n})(RegisterFormView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { requestLogin, choiceUseLoginForm } from '4-store/modules/auth'\nimport {RootState} from '4-store/types'\n\nimport { Dispatch } from 'redux';\n\nimport LoginForm from '5-components/LoginForm'\nimport LinkButton from '6-dsystem/LinkButton'\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    submit: (input: any) => dispatch(requestLogin(input)),\n    switchForm: () => dispatch(choiceUseLoginForm(false))\n  }\n}\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nconst mapStateToProps = ({auth}: RootState /*, ownProps*/) => ({\n  errorMessage: auth.errorMessage,\n})\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\nconst stylesRoot: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n}\nconst stylesFormContainer: React.CSSProperties = {\n//   position: 'absolute',\n//   top: '10%',\n    marginTop: '10%',\n    display: 'flex',\n    justifyContent: 'center',\n}\n//  \n//  className=\"col l4 m6 s12 offset-l4 offset-m3\"\nconst LoginScreen: React.FC<DispatchProps & StateProps> = ({submit, switchForm, errorMessage}) => {\n  return (\n    <div style={stylesRoot}>\n      <div style={stylesFormContainer}>\n        <LoginForm submit={submit} errorMessage={errorMessage}/>\n      </div>\n      <div>\n        Use <LinkButton onClick={switchForm}>Register Form </LinkButton> to create an account\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginScreen);\n","import React from 'react';\n\nimport LinkButton from '6-dsystem/LinkButton'\n\ninterface AuthHeaderProps {\n  readonly logout: () => void;\n}\nconst container: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'row',\n  padding: '0.5em 1em',\n  backgroundColor: '#0A0',\n  alignItems: 'center'\n};\nconst left: React.CSSProperties = {\n  flex: 1,\n  fontSize: '1.5em',\n  fontWeight: 'bold',\n};\nconst AuthHeader: React.FC<AuthHeaderProps> = ({logout}) => {\n  return (\n    <div style={container}>\n      <div style={left}>\n        PW Transfer\n      </div>\n      <div>\n        <LinkButton onClick={logout}>Logout</LinkButton>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthHeader;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { requestLogout } from '4-store/modules/auth'\nimport AuthHeader from '5-components/AuthHeader'\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    logout: () => dispatch(requestLogout())\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(AuthHeader);\n","import React from 'react';\n\ninterface UserInfoHeaderProps {\n  readonly name: string;\n  readonly email: string;\n  readonly balance: number;\n}\nconst styles: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'row',\n  padding: '1em 1em',\n  backgroundColor: 'lightyellow',\n  justifyContent: 'space-between', //? compatibility\n  fontSize: '2em',\n};\nconst UserInfoHeader: React.FC<UserInfoHeaderProps> = ({name, email, balance}) => {\n  return (\n    <div style={styles}>\n      <div>{name}</div>\n      <div>{email}</div>\n      <div>{balance}</div>\n    </div>\n  );\n}\n\nexport default UserInfoHeader;\n","import { connect } from 'react-redux';\n\nimport {RootState} from '4-store/types'\nimport UserInfoHeader from '5-components/UserInfoHeader'\n\nconst mapStateToProps = ({userinfo}: RootState /*, ownProps*/) => ({\n  name: userinfo.name,\n  email: userinfo.email,\n  balance: userinfo.balance,\n})\n\nexport default connect(mapStateToProps)(UserInfoHeader);\n","export default {\n  STYLES: ['large', 'small', 'floating', 'flat'],\n  WAVES: ['light', 'red', 'yellow', 'orange', 'purple', 'green', 'teal'],\n  SIZES: ['s', 'm', 'l', 'xl'],\n  PLACEMENTS: ['left', 'center', 'right'],\n  SCALES: ['big', 'small'],\n  ICON_SIZES: ['tiny', 'small', 'medium', 'large']\n};\n","let id = 0;\n\nexport function resetID() {\n  id = 0;\n}\n\nexport default function idgen() {\n  let oldId = id;\n  id += 1;\n  return oldId;\n}\n","/* eslint no-unused-vars: [\"error\", { \"ignoreRestSiblings\": true }] */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport constants from './constants';\nimport idgen from './idgen';\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.id = props.id || `autocomplete-input-${idgen()}`;\n\n    this.state = {\n      value: props.value || '',\n      itemSelected: false,\n      prevData: props.options.data,\n    };\n\n    this._onChange = this._onChange.bind(this);\n    this._onAutocomplete = this._onAutocomplete.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.options.data !== state.prevData) {\n      return {\n        prevData: props.options.data,\n      };\n    }\n    return null;\n  }  \n  componentDidMount() {\n    if (typeof M !== 'undefined') {\n      const { options } = this.props;\n      this.instance = window.M.Autocomplete.init(this.inputRef, {\n        onAutocomplete: this._onAutocomplete,\n        ...options,\n      })\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.prevData !== prevState.prevData) {\n      this.instance.updateData(this.state.prevData);\n      this.instance.open();\n    }\n  }\n  componentWillUnmount() {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n  }\n\n  _onChange(e) {\n    const { onChange } = this.props;\n    const value = e.target.value;\n    onChange && onChange(e, value);\n\n    this.setState({ value, itemSelected: false });\n  }\n\n  _onAutocomplete(value, e) {\n    const { onChange } = this.props;\n    onChange && onChange(e, value);\n\n    this.setState({ value, itemSelected: true });\n  }\n\n  render() {\n    const {\n      label,\n      inputClassName,\n      success,\n      error,\n      icon,\n      s,\n      m,\n      l,\n      xl,\n      disabled,\n      noLayout,\n      placeholder,\n      // these are mentioned here only to prevent from getting into ...props\n      validate,\n      value,\n      onChange,\n      options,\n      ...other\n    } = this.props;\n\n    const sizes = { s, m, l, xl };\n\n    let responsiveClasses;\n    if (!noLayout) {\n      responsiveClasses = { col: true };\n      constants.SIZES.forEach(size => {\n        responsiveClasses[size + sizes[size]] = sizes[size];\n      });\n    }\n\n    const wrapperClasses = cx('input-field', responsiveClasses);\n\n    const inputProps = {\n      placeholder,\n      type: \"text\",\n      id: this.id,\n      // defaultValue,\n      disabled,\n      onChange: this._onChange,\n      value: this.state.value,\n\n      ...other\n    };\n\n    const renderLabel = () =>\n      label && (\n        <label\n          className={cx({\n            active: value || placeholder,\n            'label-icon': typeof label !== 'string'\n          })}\n          data-success={success}\n          data-error={error}\n          htmlFor={inputProps.id}\n        >\n          {label}\n        </label>\n      );\n    const renderHelper = () =>\n      (error || success) && (\n        <span\n          className=\"helper-text\"\n          data-error={error}\n          data-success={success}\n        />\n      );\n    const renderIcon = () => {\n      if (!icon) return;\n\n      if (typeof icon === 'string') {\n        return <i className=\"material-icons prefix\">{icon}</i>;\n      }\n\n      return React.cloneElement(icon, { className: 'prefix' });\n    };\n  \n    return (\n      <div className={wrapperClasses}>\n        {renderIcon()}\n        <input\n          ref={el => {\n            this.inputRef = el;\n          }}\n          className={cx(\"autocomplete\", { validate }, inputClassName)}\n          {...inputProps}\n        />\n        {renderLabel()}\n        {renderHelper()}\n      </div>\n    );\n  }\n}\n\nAutocomplete.propTypes = {\n  /**\n   * Uniquely identifies <input> generated by this component\n   * Used by corresponding <label> for attribute\n   */\n  id: PropTypes.string,\n  className: PropTypes.string,\n  /*\n   * The title of the autocomplete component.\n   */\n  title: PropTypes.string,\n  /*\n   * Optional materialize icon to add to the autocomplete bar\n   */\n  icon: PropTypes.string,\n  s: PropTypes.number,\n  m: PropTypes.number,\n  l: PropTypes.number,\n  xl: PropTypes.number,\n  offset: PropTypes.string,\n  /**\n   * Placeholder for input element\n   * */\n  placeholder: PropTypes.string,\n  /**\n   * Called when the value of the input gets changed - by user typing or clicking on an auto-complete item.\n   * Function signature: (event, value) => ()\n   */\n  onChange: PropTypes.func,\n  /**\n   * The value of the input\n   */\n  value: PropTypes.string,\n  /**\n   * Options for the autocomplete\n   * <a target=\"_blank\" rel=\"external\" href=\"https://materializecss.com/autocomplete.html#options</a>\n   */\n  options: PropTypes.shape({\n    /**\n     * Data object defining autocomplete options with optional icon strings.\n     */\n    data: PropTypes.object.isRequired,\n    /**\n     * Limit of results the autocomplete shows.\n     */\n    limit: PropTypes.number,\n    /**\n     * Callback for when autocompleted.\n     */\n    onAutocomplete: PropTypes.func,\n    /**\n     * \tMinimum number of characters before autocomplete starts.\n     */\n    minLength: PropTypes.number,\n    /**\n     * Sort function that defines the order of the list of autocomplete options.\n     */\n    sortFunction: PropTypes.func\n  })\n};\n\nAutocomplete.defaultProps = {\n  options: {\n    data: {},\n    limit: Infinity,\n    onAutocomplete: null,\n    minLength: 1,\n    sortFunction: null\n  }\n};\n\nexport default Autocomplete;\n","import React from 'react';\n\nimport MAutocomplete from \"./Autocomplete\";\n\nconst Autocomplete: React.FC<any> = ({errors, touched, values, ...restProps}) => {\n  const name = restProps.name;\n  const error = (errors[name] && touched[name] && errors[name]) || undefined;\n\n  return (\n    <MAutocomplete \n      l={12}\n      s={12}\n      m={12}\n      error={error}\n      inputClassName={error ? 'invalid' : ''}\n      value={values && values[name] && `${values[name]}`}\n      {...restProps}\n    />\n  );\n}\n\nexport default Autocomplete;\n","import React from \"react\";\nimport { withFormik, FormikProps, Form } from \"formik\";\nimport { string as yup_string, number as yup_number, Schema } from \"yup\";\n\nimport { Row, Col, Button } from \"react-materialize\";\nimport TextInput from '6-dsystem/TextInput'\nimport Autocomplete from '6-dsystem/Autocomplete/index'\n\n\ninterface FormValues {\n  name: string,\n  amount: number,\n}\ninterface OtherProps {\n  cancel: () => void;\n  onChangeFilter: (filter: string) => void, \n  recipients: {[key: string]: any},\n  errorMessage: null | string\n}\nconst TransactioFormView = (props: OtherProps & FormikProps<FormValues>) => {\n  const { touched, errors, handleChange, handleBlur, cancel, values, \n    recipients, onChangeFilter, errorMessage } = props;\n  const bundle = { touched, errors, values, onChange: handleChange, onBlur: handleBlur };\n  const options={ data: recipients };\n  \n  return (\n    <Form className=\"form\">\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <h4 className=\"center-align\">New Transaction</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <Autocomplete label=\"Recipient\" name=\"name\" options={options} autoComplete=\"off\" {...bundle} \n            onChange={(e: any, value: string)=>{\n              if (e) {\n                onChangeFilter(value);\n                handleChange(e);\n              } else {\n                handleChange({target: {name:\"name\", value}});\n              }\n            }} \n          />\n        </Col>\n        <Col l={12} m={12} s={12}>\n          <TextInput type=\"number\" min=\"0\" label=\"Amount\" name=\"amount\"  autoComplete=\"off\" {...bundle} />\n        </Col>\n      </Row>\n      {errorMessage && (\n        <Row>\n          <Col l={12} m={12} s={12}>\n            <div className=\"center-align form-error\">{errorMessage}</div>\n          </Col>\n        </Row>\n        )}\n      <Row>\n        <Col className=\"right\">\n          <Button type=\"button\" waves=\"light\" onClick={cancel}>\n            Cancel\n          </Button>\n          <Button type=\"submit\" waves=\"light\" className=\"form-button\">\n            Commit\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n};\ninterface MyFormProps extends FormValues {\n  submit: (values: any) => void;\n  cancel: () => void;\n  balance: number;\n  onChangeFilter: (filter: string) => void, \n  recipients: {[key: string]: any},\n  errorMessage: null | string;\n}\nexport default withFormik<MyFormProps, FormValues>({\n  mapPropsToValues: (props) => {\n    return {\n      name: props.name || '',\n      amount: props.amount || 0,\n    }\n  },\n  handleSubmit: (values, formikBag) => {\n    formikBag.props.submit(values);\n  },\n  validate: (values,props) => {\n    let errors: {[key: string]: string} = {};\n\n    const testValue = (name: string, schema: Schema<any>, value: any, errors: {[key: string]: string}) => {\n      try {\n        schema.validateSync(value);\n      }catch(err){\n        errors[name] = err.errors[0];\n      };\n     };\n\n    testValue('name', yup_string().trim().required(\"recipient's name is required.\"), values.name, errors );\n    testValue('amount', yup_number().moreThan(0, \"must be greater than zero\").max(props.balance).required(\"amount is required.\"), values.amount, errors );\n\n    return errors;\n  },\n  displayName: 'TransactioForm',\n})(TransactioFormView);\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux'\n\nimport { requestCommit, cancelTransaction } from '4-store/modules/transaction'\nimport { requestRecipients } from '4-store/modules/recipients'\nimport {RootState} from '4-store/types'\nimport TransactioForm from '5-components/TransactionForm'\n\nconst mapStateToProps = ({transaction, userinfo, recipients}: RootState /*, ownProps*/) => ({\n  name: transaction.name,\n  amount: transaction.amount,\n  balance: userinfo.balance,\n  recipients: recipients.list,\n  errorMessage: transaction.errorMessage,\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    submit: (input: any) => dispatch(requestCommit(input)),\n    cancel: () => dispatch(cancelTransaction()),\n    onChangeFilter: (filter: string) => dispatch(requestRecipients(filter))\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(TransactioForm);\n","import { createSelector } from 'reselect';\nimport {RootState} from \"./types\"\nimport { sortBy } from '9-helpers/index';\n\nconst history = (state: RootState) => state.history.list;\n\nexport const sortedHistory = createSelector(\n  history,\n  (history) => {\n    const list = history.slice();\n    list.sort(sortBy('date', false));\n    return list;\n  },\n);\n","export function sortBy(key: string, forward: boolean = true) {\n  const direction = !forward ? -1 : 1 \n  return function compare(o1: any, o2: any) {\n    if (o1[key] < o2[key]) {\n      return -1*direction;\n    }\n    if (o1[key] > o2[key]) {\n      return 1*direction;\n    }\n    return 0;\n  };\n}\n","import React from 'react';\nimport { Table, Row, Col } from \"react-materialize\";\nimport LinkButton from \"6-dsystem/LinkButton\"\n\nexport interface Transaction {\n  id: number,\n  date: string,\n  username: string,\n  amount: number,\n  balance: number,\n};\nexport interface HistoryProps {\n  list: Transaction[],\n  copyTransaction: (input: {name: string, amount: number}) => void\n};\nconst stylesContainer: React.CSSProperties = {\n  // display: 'flex',\n  // flexDirection: 'column',\n  // padding: '1em 1em',\n  // backgroundColor: 'lightyellow',\n  // justifyContent: 'space-between', //? compatibility\n  // fontSize: '2em',\n};\n\nconst History: React.FC<HistoryProps> = ({ list, copyTransaction }) => {\n  const onClick = (e: any) => {\n    const ds = e.target.dataset;\n    copyTransaction({\n      name: ds.name,\n      amount: ds.amount,\n    })\n  }\n  return (\n    <div style={stylesContainer}>\n      <Row>\n        <Col l={12} m={12} s={12}>\n          <h5 className=\"center-align\">History</h5> \n        </Col>\n      </Row>\n      <Table className=\"highlight\">\n        <thead>\n          <tr>\n            <th>Date/Time</th>\n            <th>Correspondent</th>\n            <th className=\"right-align\">Amount</th>\n            <th className=\"right-align\">Balance</th>\n            <th className=\"center-align\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list.map(item => (\n          <tr key={item.id}>\n            <td>{item.date}</td>\n            <td>{item.username}</td>\n            <td className=\"right-align\">{item.amount}</td>\n            <td className=\"right-align\">{item.balance}</td>\n            <td className=\"center-align\">\n              <LinkButton dataname={item.username} dataamount={`${Math.max(item.amount,-item.amount)}`} onClick={onClick}>\n                Copy\n              </LinkButton>\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default History;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport {RootState} from '4-store/types'\nimport {sortedHistory} from '4-store/selectors'\nimport { copyTransaction } from '4-store/modules/transaction'\n\nimport History from '5-components/History'\n\nconst mapStateToProps = (state: RootState /*, ownProps*/) => ({\n  list: sortedHistory(state),\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    copyTransaction: (payload?: {name: string, amount: number}) => dispatch(copyTransaction(payload))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(History);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux'\n\nimport { newTransaction, choiceHistory } from '4-store/modules/transaction'\nimport { RootState } from '4-store/types'\n\nimport LinkButton from '6-dsystem/LinkButton'\nimport AuthHeaderConnected from './AuthHeaderConnected'\nimport UserInfoHeaderConnected from './UserInfoHeaderConnected'\nimport TransactionFormConnected from './TransactionFormConnected'\nimport HistoryConnected from './HistoryConnected'\n\nconst mapStateToProps = ({ transaction }: RootState /*, ownProps*/) => ({\n  editingTransaction: transaction.editing,\n  showHistory: transaction.showHistory,\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    beginTransaction: () => dispatch(newTransaction()),\n    choiceHistory: (showHistory: boolean) => dispatch(choiceHistory(showHistory))\n  }\n}\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\ntype Props = StateProps & DispatchProps;\n\nconst styles: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n}\nconst containerTransaction: React.CSSProperties = {\n  display: 'flex',\n  justifyContent: 'center',\n}\nconst styleMenu: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'space-between', //? compatibility\n  paddingLeft: '0.5em',\n  paddingRight: '0.5em',\n}\n\nconst MainScreenView: React.FC<Props> = ({ editingTransaction, beginTransaction, showHistory, choiceHistory }) => {\n  return (\n    <div style={styles}>\n      <AuthHeaderConnected />\n      <UserInfoHeaderConnected />\n\n      <div style={styleMenu}>\n        {!showHistory && <LinkButton onClick={() => choiceHistory(true)}>Show History</LinkButton>}\n        {showHistory && <LinkButton onClick={() => choiceHistory(false)}>Hide History</LinkButton>}\n        <LinkButton onClick={beginTransaction}>New Transaction</LinkButton>\n      </div>\n      {!showHistory && editingTransaction && (\n        <div style={containerTransaction}>\n          <TransactionFormConnected />\n        </div>\n      )}\n      {showHistory && <HistoryConnected />}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreenView);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {RootState} from '4-store/types'\n\nimport RegisterScreen from '1-screens/RegisterScreen';\nimport LoginScreen from '1-screens/LoginScreen';\nimport MainScreen from '1-screens/MainScreen';\n\ninterface StateProps {\n  readonly logged: boolean;\n  readonly useLoginForm: boolean;\n}\n\nconst SwitchScreen: React.FC<StateProps> = ({logged, useLoginForm}) => {\n  return (\n    <React.Fragment>\n      {!logged && useLoginForm && <LoginScreen />}\n      {!logged && !useLoginForm && <RegisterScreen />} \n      {logged && <MainScreen />}\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({auth}: RootState /*, ownProps*/): StateProps => ({\n  logged: auth.logged,\n  useLoginForm: auth.useLoginForm,\n})\n\nexport default connect(mapStateToProps)(SwitchScreen);\n","import React from \"react\";\nimport { Col, Row } from \"react-materialize\";\n\nconst stylesRoot: React.CSSProperties = {\n  marginBottom: 0\n}\n\nconst RootLayout: React.FC = ({ children }) => {\n  return (\n    <Row style={stylesRoot}>\n      <Col s={12} m={10} l={8} offset=\"m1 l2\">\n        {children}\n      </Col>\n    </Row>\n  )\n}\n\nexport default RootLayout;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from '4-store'\nimport SwitchScreen from \"1-screens/SwitchScreen\";\nimport RootLayout from \"5-components/RootLayout\";\n\nimport './styles.css'\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <RootLayout>\n        <SwitchScreen />\n      </RootLayout>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './0-App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}